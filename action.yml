name: "Setup"
inputs:
  cache-venv:
    default: false
  cache-yarn:
    default: false
runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Setup Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
        architecture: "x64"

    - name: Setup Pipenv
      uses: dschep/install-pipenv-action@v1
      with:
        version: 2022.9.24

    - name: Cache .venv
      if: inputs.cache-venv == 'true'
      uses: actions/cache@v3
      id: cache-venv
      env:
        cache-name: cache-venv
      with:
        path: ./.venv
        key: v1-${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/Pipfile.lock') }}-${{ github.event.number }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/Pipfile.lock') }}-
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Setup Node 14
      uses: actions/setup-node@v3
      with:
        node-version: "14"
        cache: "yarn"

    - name: Run Yarn Install
      if: inputs.cache-yarn == 'true'
      shell: bash
      run: yarn install

    - name: Initialize Lerna
      if: steps.cache-yarn.outputs.cache-hit == 'true'
      shell: bash
      run: |
        yarn lerna bootstrap
        yarn lerna exec --parallel yarn link
