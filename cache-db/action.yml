name: "Cache Database"

inputs:
  github-token:
    default: ""
  db-snapshot-artifact-run-id:
    default: ""

runs:
  using: "composite"
  steps:
    - name: Cache DB migration datas
      id: cache-db
      uses: actions/cache@v4
      with:
        path: ./db-volume.tar
        key: db-${{ runner.os }}-${{ hashFiles('zuzu/db/migrations/0*') }}
        restore-keys: |
          db-${{ runner.os }}-

    - name: Extract the compressed DB migration datas
      if: steps.cache-db.outputs.cache-hit == 'true'
      shell: bash
      run: |
        sudo tar -xvf db-volume.tar

    - uses: kodebox-io/captain-setup-action/setup-db-with-artifact@master
      if: steps.cache-db.outputs.cache-hit != 'true'
      with:
        github-token: ${{ inputs.github-token }}
        db-snapshot-artifact-run-id: ${{ inputs.db-snapshot-artifact-run-id }}

    - name: Compress the DB migration datas
      if: steps.cache-db.outputs.cache-hit != 'true'
      shell: bash
      run: |
        docker compose -f ./docker/testing.yaml up -d db
        for _ in $(seq 3); do yarn retry -t 1000 --max-timeout=60000 ./zz db_isready; sleep 1; done

        ./zz migrate --no-input
        ./zz backupdb postgres test_postgres

        # actions/cache에서는 'docker' usergroup이 소유하고 있는 파일에 접근할 수 없어, 부득이하게 Docker volume의 압축파일을 생성하여 캐시한다.
        # See https://github.com/actions/cache/issues/31
        sudo tar -cvf db-volume.tar ./db-volume
